---
layout: layouts/base.njk
templateClass: tmpl-experiment-graphing
---

<script id="analyte-interaction">
document.addEventListener("DOMContentLoaded", (event) => {
  const retrieveAnalyte = () => {
       console.info("retrieveAnalyte()")  
       const analyteName = document.getElementById('retrieve-analyte-input').value
       if (analyteName === '' ) return;
       const url = `https://stark-ravine-46729.herokuapp.com/api/v1/analytes?name=${analyteName}`
       console.log(url)
       fetch(url)
  // Resolve the JSON returned from the url
  .then(response => response.json())
  // Display the image and the raw JSON in the page
  .then(result => {
  // Work with the Analyte data
  console.log(result) 
   const residentSoil = result.data[0]["resident_soil"]
   const residentSoilElement = document.getElementById("r1c1")
   residentSoilElement.innerText = residentSoil
 
   const industrialSoil = result.data[0]["industrial_soil"]
   const industrialSoilElement = document.getElementById("r1c2")
   industrialSoilElement.innerText = industrialSoil
 
   const residentAir = result.data[0]["resident_air"]
   const residentAirElement = document.getElementById("r1c3")
   residentAirElement.innerText = residentAir
   
   const industrialAir = result.data[0]["industrial_air"]
   const industrialAirElement = document.getElementById("r1c4")
   industrialAirElement.innerText = industrialAir
  
   const tapwater = result.data[0]["tapwater"]
   const tapwaterElement = document.getElementById("r1c5")
   tapwaterElement.innerText = tapwater
   
   const mcl = result.data[0]["mcl"]
   const mclElement = document.getElementById("r1c6")
   mclElement.innerText = mcl

   const riskBasedssl = result.data[0]["risk_based_ssl"]
   const riskBasedsslElement = document.getElementById("r1c7")
   riskBasedsslElement.innerText = riskBasedssl

   const mclBasedssl = result.data[0]["mcl_based_ssl"]
   const mclBasedsslElement = document.getElementById("r1c8")
   mclBasedsslElement.innerText = mclBasedssl
  })
  
  // add mock analyte data
  
} 

  document.getElementById("retrieve-analyte").addEventListener("click", retrieveAnalyte );
   {# const riskBasedsslkey = analytes.data[0]["risk_based_ssl_key"]
   const riskBasedsslkeyElement = document.getElementById("r4c") #}
   {# const mclBasedssl = analytes.data[0]["mcl_based_ssl"] #}

  const clearAnalyte = () => {
      console.info("clearAnalyte()")
  }


})
</script>

<div id="analyte-tables">

   <table class="analyte-table" id="">
         
         <th id="analyte-table-header"></th>

         <tr class="analyte-table-row" id="row1">
           <td class="analyte-data-col" id="r1c1"></td>
           <td class="analyte-data-col" id="r1c2"></td>
           <td class="analyte-data-col" id="r1c3"></td>
           <td class="analyte-data-col" id="r1c4"></td>
           <td class="analyte-data-col" id="r1c5"></td>
           <td class="analyte-data-col" id="r1c6"></td>
           <td class="analyte-data-col" id="r1c7"></td>
         </tr>

          <tr class="analyte-table-row" id="row2">
           <td class="analyte-data-col" id="r2c1"></td>
           <td class="analyte-data-col" id="r2c2"></td>
           <td class="analyte-data-col" id="r2c3"></td>
         </tr>

         <tr class="analyte-table-row" id="row3">
           <td class="analyte-data-col" id="r3c1"></td>
           <td class="analyte-data-col" id="r3c2"></td>
           <td class="analyte-data-col" id="r3c3"></td>
         </tr>
            
<tr class="analyte-table-row" id="row4">
           <td class="analyte-data-col" id="r4c1"></td>
           <td class="analyte-data-col" id="r4c2"></td>
           <td class="analyte-data-col" id="r4c3"></td>
         </tr>

        </table>
</div>


<main id="content-pane">

  <span id="analyte-component">  
    
    <input type="input" id="retrieve-analyte-input" />
          
    <button id="retrieve-analyte">Retrieve Analyte</button>
    <button id="clear-analyte" onclick="clearAnalyteTable()">Clear Analyte</button>

    <div id="analyte-search-output"></div>

  </span>


</main>

{{ content | safe }}