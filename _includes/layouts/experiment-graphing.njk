---
layout: layouts/base.njk
templateClass: tmpl-experiment-graphing
---

<script id="analyte-interaction">

  const retrieveAnalyte = (analyteIdentifier) => {
       console.info("retrieveAnalyte()")  
       {# const url = "https://stark-ravine-46729.herokuapp.com/api/v1/analytes?name=Acetate"
       fetch(url)
  // Resolve the JSON returned from the url
  .then(response => response.json())
  // Display the image and the raw JSON in the page
  .then(result => {
  // Work with the Analyte data
  console.log(result) 
  })
  #}
  // add mock analyte data
  const analytes = {
  "data": [
    {
      "sfo": "0.055",
      "sfo_key": "I",
      "iur": "0.0000078",
      "iur_key": "I",
      "rfdo": "0.004",
      "rfdo_key": "I",
      "rfci": "0.03",
      "rfci_key": "I",
      "vol": "V",
      "mutagen": null,
      "giabs": "1",
      "absd": "         ",
      "csat": "1800",
      "analyte": "Benzene",
      "cas_number": "71-43-2",
      "resident_soil": "1.2",
      "resident_soil_key": "c*",
      "industrial_soil": "5.1",
      "industrial_soil_key": "c*",
      "resident_air": "0.36",
      "resident_air_key": "c*",
      "industrial_air": "1.6",
      "industrial_air_key": "c*",
      "tapwater": "0.46",
      "tapwater_key": "c*",
      "mcl": "5",
      "risk_based_ssl": "0.00023",
      "risk_based_ssl_key": "c*",
      "mcl_based_ssl": "0.0026"
    }
  ]
} 
// log analyte data
console.log("analyte data: (MCL quantity)", analytes.data[0]["mcl"])
   const residentSoil = analytes.data[0]["resident_soil"]
   const residentSoilElement = document.getElementById("r1c1")
   const residentSoilKey = analytes.data[0]["resident_soil_key"]
   const residentSoilKeyElement = document.getElementById("r1c2")
   const industrialSoil = analytes.data[0]["industrial_soil"]
   const industrialSoilElement = document.getElementById("r1c3")
   const industrialSoilKey = analytes.data[0]["industrial_soil_key"]
   const industrialSoilKeyElement = document.getElementById("r2c1")
   const residentAir = analytes.data[0]["residential_air"]
   const residentAirElement = document.getElementById("r2c2")
   const residentAirKey = analytes.data[0]["resident_air_key"]
   const residentAirKeyElement = document.getElementById("r2c3")
   const industrialAir = analytes.data[0]["industrial_air"]
   const industrialAirElement = document.getElementById("r3c1")
   const industrialAirKey = analytes.data[0]["industrial_air_key"]
   const industrialAirKeyElement = document.getElementById("r3c2")
   const tapwater = analytes.data[0]["tapwater"]
   const tapwaterElement = document.getElementById("r3c3")
   const tapwaterKey = analytes.data[0]["tapwater_key"]
   const tapwaterKeyElement = document.getElementById("r4c1")
   const mcl = analytes.data[0]["mcl"]
   const mclElement = document.getElementById("r4c2")
   const riskBasedssl = analytes.data[0]["risk_based_ssl"]
   const riskBasedsslElement = document.getElementById("r4c3")
   {# const riskBasedsslkey = analytes.data[0]["risk_based_ssl_key"]
   const riskBasedsslkeyElement = document.getElementById("r4c") #}
   {# const mclBasedssl = analytes.data[0]["mcl_based_ssl"] #}
  }

  const clearAnalyte = () => {
      console.info("clearAnalyte()")
  }



</script>

<div id="analyte-tables">
{% for analyte in analyteData.data %}

   <table class="analyte-table" id="{{analyte.id}}">
         
         <th id="analyte-table-header">{{analyte.name}}</th>

         <tr class="analyte-data-row" id="analyte-row1">
           <td class="analyte-data-col" id="analyte-row1-col1">{{analyte.row1[0]}}</td>
           <td class="analyte-data-col" id="analyte-row1-col2">{{analyte.row1[1]}}</td>
         </tr>

          <tr class="analyte-data-row" id="analyte-row2">
             <td class="analyte-data-col" id="analyte-row2-col1">{{analyte.row2[0]}}</td>
             <td class="analyte-data-col" id="analyte-row2-col2">{{analyte.row2[1]}}</td>
          </tr>

          <tr class="analyte-data-row" id="analyte-row3">
             <td class="analyte-data-col" id="analyte-row3-col1">{{analyte.row3[0]}}</td>
             <td class="analyte-data-col" id="analyte-row3-col2">{{analyte.row3[1]}}</td>
          </tr>

          <tr class="analyte-data-row" id="analyte-row4">
             <td class="analyte-data-col" id="analyte-row4-col1">{{analyte.row4[0]}}</td>
             <td class="analyte-data-col" id="analyte-row4-col2">{{analyte.row4[1]}}</td>
          </tr>
            
        </table>
{% endfor %}
</div>


<main id="content-pane">

  <span id="analyte-component">  
    
    <input type="input" id="retrieve-analyte-input" />
          
    <button id="retrieve-analyte" onclick="retrieveAnalyte()">Retrieve Analyte</button>
    <button id="clear-analyte" onclick="clearAnalyteTable()">Clear Analyte</button>

    <div id="analyte-search-output"></div>

  </span>


</main>

{{ content | safe }}